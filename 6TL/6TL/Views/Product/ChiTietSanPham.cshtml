@model _6TL.Models.Product
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

<link href="~/css/pages/chitietsanpham.css" rel="stylesheet" />
<style>
    .color-option_ct {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: inline-block;
        cursor: pointer;
        border: 2px solid transparent;
        transition: all 0.3s ease;
    }

        .color-option_ct.selected {
            width: 33px; /* Phóng to */
            height: 33px; /* Phóng to */
            border: 2px solid black; /* Viền nổi bật */
        }
</style>

<div class="banner_ct">
    <nav class="breadcrumb_ct">
        <a href="#">Mục trên menu</a> / <a href="#">Loại sản phẩm</a>
    </nav>
    <h1 class="product-title_ct">@Model.ProductName</h1>
    <p class="product-code_ct">Mã sản phẩm: @Model.ProductId</p>
</div>
<div class="product-detail_ct">
    <div class="product-container_ct">
        <div class="product-image_ct">
            <img src="@Url.Content($"~/img/{Model.Image}")" alt="@Model.ProductName" class="product-image_ct" />
        </div>
        <div class="product-info_ct">
            <ul>
                <!-- Tên sản phẩm -->
                <li><h3><strong>@Model.ProductName</strong></h3></li>

                <!-- Mô tả sản phẩm -->
                <li>@Model.ProductDescription</li>

                <li>
                    Chất liệu:
                    <span class="material-btn" style="background-color: #D69A49;">@Model.Material</span>
                </li>
                <li>
                    Màu sắc:
                    @if (ViewData["Colors"] != null)
                    {
                        var colors = ViewData["Colors"] as List<_6TL.Models.Color>;
                        @foreach (var color in colors)
                        {
                            <div class="color-option_ct"
                                 data-color-id="@color.ColorId"
                                 data-color-code="@color.ColorCode"
                                 style="background-color: @color.ColorCode;">
                            </div>
                        }
                    }
                    else
                    {
                        <span>Không có màu sắc</span>
                    }
                </li>

                <!-- Trạng thái -->
                <li>
                    Trạng thái:
                    @if (Model.Quantity > 0)
                    {
                        <span class="status-value_ct" style="color: green;">Còn hàng</span>
                        <span class="stock-count_ct">Số lượng còn: @Model.Quantity</span>
                    }
                    else
                    {
                        <span class="status-value_ct" style="color: red;">Hết hàng</span>
                    }
                </li>
            </ul>
            <p class="price_ct">
                @string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0} VNĐ", Model.Price)
            </p>

            <!-- Đánh giá trung bình -->
            <div class="product-rating_ct">
                <span class="rating-value_ct">@Math.Round(Model.Rating ?? 0, 1) / 5</span>
                <div class="stars_ct">
                    @for (int i = 0; i < 5; i++)
                    {
                        <span class="star_ct">@((i < Math.Round(Model.Rating ?? 0)) ? "⭐" : "☆")</span>
                    }
                </div>
            </div>

            <div class="product-statistic_ct">
                <p class="rating-summary_ct">124 lượt đánh giá • 312 sản phẩm đã mua</p>
            </div>

            <div class="quantity-ct">
                <label for="quantity-input">Số lượng:</label>
                <input type="number" id="quantity-input" class="quantity-input_ct" value="1" min="1" max="@Model.Quantity">
            </div>
            <div class="actions_ct">
                <!-- Form "Mua ngay" -->
                <form action="/Home/TrangThanhToan" method="get" class="actions_ct">
                    <input type="hidden" name="productId" value="@Model.ProductId">
                    <input type="hidden" name="productName" value="@Model.ProductName">
                    <input type="hidden" name="productImage" value="@Model.Image">
                    <input type="hidden" name="productPrice" value="@Model.Price">
                    <input type="hidden" id="productColor-buy" name="productColor" value="">
                    <input type="hidden" id="quantity-input-hidden" name="quantity" value="1">
                    <button type="submit" class="buy-now_ct">Mua ngay</button>
                </form>

                <!-- Form "Thêm vào giỏ hàng" -->
                <form id="add-to-cart-form" method="post" action="/Product/AddToCart">
                    <input type="hidden" name="productId" value="@Model.ProductId">
                    <input type="hidden" name="productName" value="@Model.ProductName ">
                    <input type="hidden" name="productImage" value="@Model.Image">
                    <input type="hidden" name="price" value="@Model.Price">
                    <input type="hidden" id="productColor-cart" name="productColor" value="">
                    <input type="hidden" name="quantity" value="1">
                    <button type="submit" class="add-to-cart_ct">Thêm Giỏ Hàng</button>
                </form>
           

                <div class="favorite_ct">
                    <i class="fa fa-heart heart-icon_ct"></i>
                </div>
            </div>

            <p class="delivery-info_ct">
                🚚 Miễn phí giao hàng với đơn trên 100 Nghìn<br />
                (*) Dành cho khu vực Trong TP.HCM và Hà Nội
            </p>
        </div>
    </div>

    <!-- Bình luận -->
    <div class="comments-section_ct">
        <h2 class="comments-title_ct">Đánh giá</h2>
        <div class="divider_ct"></div> <!-- Đường kẻ dưới tiêu đề -->
        <div class="comments-list_ct">
            <div class="comment-item_ct">
                <img src="~/img/user-placeholder.jpg" alt="User Avatar" class="comment-avatar_ct">
                <div class="comment-content_ct">
                    <div class="comment-header_ct">
                        <p class="comment-username_ct">Nguyễn Văn A</p>
                        <p class="comment-time_ct">01/12/2024 - 14:30</p>
                    </div>
                    <p class="comment-text_ct">Sản phẩm rất đẹp, giao hàng nhanh chóng và cẩn thận.</p>
                </div>
            </div>
            <div class="comment-item_ct">
                <img src="~/img/user-placeholder.jpg" alt="User Avatar" class="comment-avatar_ct">
                <div class="comment-content_ct">
                    <div class="comment-header_ct">
                        <p class="comment-username_ct">Nguyễn Thị B</p>
                        <p class="comment-time_ct">02/12/2024 - 09:15</p>
                    </div>
                    <p class="comment-text_ct">Chất lượng sản phẩm vượt mong đợi!</p>
                </div>
            </div>
        </div>
    </div>


    </section>

</div>
<section class="py-5">
    <div class="container text-center">
        <div class="text-center">
            <h2 class="mb-2">Sản Phẩm Liên Quan</h2>
        </div>
        <div class="text-end">
            <a href="/Home/SanPham" class="btn-more_ct text-decoration-none">Xem thêm &raquo;</a>
        </div>

        <!-- Carousel container -->
        <div id="relatedProductsCarousel_ct" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000">
            <div class="carousel-inner">
                @if (ViewData["RelatedProducts"] != null)
                {
                    var relatedProducts = ViewData["RelatedProducts"] as List<_6TL.Models.Product>;
                    var chunkedProducts = relatedProducts.Select((p, index) => new { p, index })
                    .GroupBy(x => x.index / 4)
                    .Select(g => g.Select(x => x.p).ToList())
                    .ToList();

                    foreach (var group in chunkedProducts)
                    {
                        <div class="carousel-item @(group == chunkedProducts.First() ? "active" : "")">
                            <div class="row">
                                @foreach (var product in group)
                                {
                                    <div class="col-md-3">
                                        <div class="product-item_ct">
                                            <div class="favorite_ct">
                                                <i class="heart-icon_ct">&hearts;</i>
                                            </div>
                                            <img src="~/img/@product.Image" alt="@product.ProductName" class="img-fluid">
                                            <h3>@product.ProductName</h3>
                                            <span>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0} VNĐ", product.Price)</span>
                                            <div class="rating_ct">
                                                <span>★★★★☆</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="carousel-item active">
                        <p>Không có sản phẩm liên quan.</p>
                    </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#relatedProductsCarousel_ct" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#relatedProductsCarousel_ct" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
        oke
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    

    //AJAX
    $(document).ready(function () {
        let selectedColor = "";
        let selectedQuantity = 1;  // Mặc định số lượng là 1

        // Hàm xử lý chọn màu
        $(".color-option_ct").on("click", function () {
            $(".color-option_ct").removeClass("selected");
            $(this).addClass("selected");
            selectedColor = $(this).data("color-code");
        });

        // Hàm xử lý thay đổi số lượng
        $("#quantity-input").on("input", function () {
            selectedQuantity = $(this).val();  // Cập nhật số lượng khi người dùng thay đổi
        });

        // Xử lý form "Thêm vào giỏ hàng" với AJAX
        $("#add-to-cart-form").on("submit", function (e) {
            e.preventDefault(); // Ngừng gửi form theo cách thông thường

            if (!selectedColor) {
                toastr.error("Vui lòng chọn màu trước khi thêm vào giỏ hàng!");  // Thông báo lỗi
                return;
            }

            // Cập nhật màu sắc và số lượng vào form
            $(this).find("input[name='productColor']").val(selectedColor);
            $(this).find("input[name='quantity']").val(selectedQuantity);  // Cập nhật số lượng

            // Gửi AJAX để thêm sản phẩm vào giỏ hàng
            $.ajax({
                url: '/Product/AddToCart',
                type: 'POST',
                data: $(this).serialize(), // Lấy dữ liệu từ form
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message); // Thông báo thành công
                    } else {
                        toastr.error(response.message); // Thông báo lỗi
                    }
                },
                error: function () {
                    toastr.error("Đã có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng.");
                }
            });
        });

        // Xử lý form "Mua ngay" với AJAX
        $(".buy-now_ct").on("click", function (e) {
            const form = $(this).closest("form");
            if (!selectedColor) {
                e.preventDefault();
                toastr.error("Vui lòng chọn màu trước khi mua!");  // Thông báo lỗi
                return;
            }
            form.find("input[name='productColor']").val(selectedColor);
            form.find("input[name='quantity']").val(selectedQuantity);  // Cập nhật số lượng

            $.ajax({
                url: '/Product/AddToCart',
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        window.location.href = "/Home/TrangThanhToan"; // Redirect đến trang thanh toán
                    } else {
                        toastr.error(response.message); // Thông báo lỗi
                    }
                },
                error: function () {
                    toastr.error("Đã có lỗi xảy ra khi mua sản phẩm.");
                }
            });
        });
    });
</script>
