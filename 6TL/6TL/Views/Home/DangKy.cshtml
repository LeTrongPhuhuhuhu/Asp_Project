@{
    ViewData["Title"] = "Register";
}
<section class="banner-register">
    <img src="~/img/banner3.jpg" alt="Banner Đăng Ký" class="banner-image">
    <div class="banner-overlay">
        <h1 class="banner-title">ĐĂNG KÝ</h1>
    </div>
</section>


<section class="form-section">
    <form class="register-form">
        <div class="form-row">
            <div class="form-group">
                <label for="name">Họ và Tên <span class="required">*</span></label>
                <input type="text" id="name" placeholder="Nhập họ và tên">
            </div>
            <div class="form-group gender">
                <label>Giới Tính</label>
                <div class="gender-options">
                    <label><input type="radio" name="gender"> Nam</label>
                    <label><input type="radio" name="gender"> Nữ</label>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="phone">Điện Thoại <span class="required">*</span></label>
                <input type="text" id="phone" placeholder="Nhập số điện thoại">
            </div>
            <div class="form-group">
                <label for="city">Tỉnh / Thành Phố <span class="required">*</span></label>
                <select id="city">
                    <option value="">Chọn tỉnh / thành phố</option>
                    <!-- Thêm danh sách tỉnh/thành phố tại đây -->
                </select>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="address">Địa Chỉ</label>
                <input type="text" id="address" placeholder="Nhập địa chỉ">
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="email">Email <span class="required">*</span></label>
                const Register = () => {
                const dispatch = useDispatch();
                const navigate = useNavigate();

                let schema = yup.object().shape({
                firstname: yup.string().required("Firstname is requied"),
                lastname: yup.string().required("Lastname is requied"),
                mobile: yup
                .string()
                .required("Mobile is requied")
                .matches(/^[0-9]+/, "Input phone number, please!"),
                email: yup
                .string()
                .required("Email is required")
                .email("Invalid email format"),
                password: yup.string().required("Password is required"),
                });
                const formik = useFormik({
                initialValues: {
                firstname: "",
                lastname: "",
                mobile: "",
                email: "",
                password: "",
                images: "user-none.jpg"
                },
                validationSchema: schema,
                onSubmit: (values) => {
                dispatch(register(values))
                .unwrap()
                .then(() => {
                toast.success("Đăng kí thành công !");
                setTimeout(() => {
                navigate("/login");
                }, 2000);
                })
                .catch(() => {
                toast.error("Email đã được đăng kí !");
                });
                },
                });
                <input type="email" id="email" placeholder="Nhập email">
            </div>
            <div class="form-group">
                <label for="password">Mật Khẩu <span class="required">*</span></label>
                <input type="password" id="password" placeholder="Nhập mật khẩu">
            </div>
        </div>
        <div class="form-row terms">
            <input type="checkbox" id="termsCheckbox">
            <label for="termsCheckbox">
                Tôi đồng ý với <a href="#" class="terms-link">Điều Khoản và Điều Kiện</a>
            </label>
        </div>
        <button class="submit-btn">Đăng Ký</button>
    </form>
</section>
