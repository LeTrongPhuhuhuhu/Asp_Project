@model List<_6TL.Models.Cart>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giỏ hàng</title>
    <link rel="stylesheet" href="~/css/pages/giohang.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
</head>
<body>
    <main>
        <!-- Thanh tiến trình -->
        <div class="steps">
            <div class="step active">1. Giỏ hàng</div>
            <div class="step">2. Thanh toán</div>
        </div>

        @if (Model == null || !Model.Any())
        {
            <!-- Giỏ hàng trống -->
            <div class="empty-cart">
                <img src="https://cdn-icons-png.flaticon.com/128/13637/13637462.png" alt="Giỏ hàng trống">
                <h2>Giỏ hàng của bạn hiện đang trống!</h2>
                <p>Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm.</p>
                <button onclick="window.location.href='@Url.Action("SanPham", "Product2")'">Quay lại mua sắm</button>
            </div>
        }
        else
        {
            <!-- Giỏ hàng có sản phẩm -->
            <div class="cart-container">
                <div class="cart-items">
                    <table class="cart-table">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="cart-item" data-id="@item.ProductId" data-price="@item.Price">
                                    <td>
                                        <img src="@item.ProductImage" alt="@item.ProductName">
                                        <div>
                                            <p>@item.ProductName</p>
                                            <span>Màu: @item.Color</span><br>
                                            <a href="#" class="remove" data-id="@item.ProductId">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                    <td>@item.Price.ToString("N0") ₫</td>
                                    <td>
                                        <button class="quantity-btn decrease">-</button>
                                        <span class="quantity-number">@item.Quantity</span>
                                        <button class="quantity-btn increase">+</button>
                                    </td>
                                    <td class="total-price">@item.TotalPrice?.ToString("N0") ₫</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="cart-summary">
                    <div class="totals">
                        <p>Tạm tính: <span id="subtotal">@Model.Sum(x => x.TotalPrice)?.ToString("N0") ₫</span></p>
                        <p>Tổng cộng: <span id="total">@Model.Sum(x => x.TotalPrice)?.ToString("N0") ₫</span></p>
                        <button  class="checkout-btn">Thanh toán</button>
                        <form action="@Url.Action("ClearCart", "Home")" method="post" style="display: inline;">
                            <button type="submit" class="delete-all-btn">Xóa toàn bộ sản phẩm</button>
                        </form>
                    </div>
                    <div class="security">
                        <h4>Bảo mật thanh toán</h4>
                        <p>Giao dịch được mã hóa đảm bảo an toàn hơn.</p>
                    </div>
                </div>
            </div>
        }



        @Html.Partial("~/Views/Shared/_Pagination.cshtml")

    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const updateSubtotal = () => {
                let subtotal = 0;
                document.querySelectorAll('.cart-item').forEach(row => {
                    const totalPrice = parseInt(row.querySelector('.total-price').textContent.replace(/\D/g, '')) || 0;
                    subtotal += totalPrice;
                });
                document.getElementById('subtotal').textContent = subtotal.toLocaleString() + ' ₫';
                document.getElementById('total').textContent = subtotal.toLocaleString() + ' ₫';
            };

            document.querySelectorAll('.cart-item').forEach(row => {
                const decreaseBtn = row.querySelector('.decrease');
                const increaseBtn = row.querySelector('.increase');
                const quantityElem = row.querySelector('.quantity-number');
                const totalPriceElem = row.querySelector('.total-price');
                const pricePerItem = parseInt(row.getAttribute('data-price'));

                const updateTotalPrice = () => {
                    const quantity = parseInt(quantityElem.textContent) || 1;
                    const totalPrice = pricePerItem * quantity;
                    totalPriceElem.textContent = totalPrice.toLocaleString() + ' ₫';
                    updateSubtotal();
                    updateQuantityOnServer(row.getAttribute('data-id'), quantity); // Update the quantity on the server
                };

                decreaseBtn.addEventListener('click', () => {
                    let quantity = parseInt(quantityElem.textContent) || 1;
                    quantity = Math.max(1, quantity - 1);
                    quantityElem.textContent = quantity;
                    updateTotalPrice();
                });

                increaseBtn.addEventListener('click', () => {
                    let quantity = parseInt(quantityElem.textContent) || 1;
                    quantity++;
                    quantityElem.textContent = quantity;
                    updateTotalPrice();
                });
            });

            const updateQuantityOnServer = (productId, quantity) => {
                fetch(`/Home/UpdateCartQuantity/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: quantity }),
                })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        alert(data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
            };

            // Xóa sản phẩm theo id
            document.querySelectorAll('.remove').forEach(button => {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    const productId = this.getAttribute('data-id');

                    if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này?")) {
                        fetch(`/Home/remove/${productId}`, {
                            method: 'DELETE'
                        }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                document.querySelector(`.cart-item[data-id="${productId}"]`).remove();
                                updateCartSummary(data.emptyCart);
                            } else {
                                alert(data.message);
                            }
                        });
                    }
                });
            });

            // Cập nhật tạm tính và tổng cộng
            const updateCartSummary = (emptyCart) => {
                if (emptyCart) {
                    document.querySelector('.cart-container').innerHTML = `
                        <div class="empty-cart" style="display: flex; flex-direction: column; align-items: center;">
                            <img src="https://cdn-icons-png.flaticon.com/128/13637/13637462.png" alt="Giỏ hàng trống">
                            <h2>Giỏ hàng của bạn hiện đang trống!</h2>
                            <p>Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm.</p>
                            <button onclick="window.location.href='@Url.Action("SanPham", "Product2")'">Quay lại mua sắm</button>
                        </div>
                    `;
                    document.querySelector('.cart-container').style.textAlign = 'center'; // Căn giữa nội dung
                } else {
                    let subtotal = 0;
                    document.querySelectorAll('.cart-item').forEach(item => {
                        subtotal += parseFloat(item.getAttribute('data-price')) * parseInt(item.querySelector('.quantity-number').innerText);
                    });
                    document.getElementById('subtotal').innerText = `${subtotal.toLocaleString()} ₫`;
                    document.getElementById('total').innerText = `${subtotal.toLocaleString()} ₫`;
                }
            };

            // Xóa toàn bộ sản phẩm trong giỏ hàng
            document.querySelector('.delete-all-btn').addEventListener('click', function () {


                if (confirm('Bạn có chắc chắn muốn xóa tất cả sản phẩm trong giỏ hàng?')) {
                    fetch('/Home/clearCart', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.querySelector('.cart-table tbody').innerHTML = ''; // Xóa hết sản phẩm
                            document.querySelector('.cart-summary').style.display = 'none'; // Ẩn phần tóm tắt giỏ hàng
                            document.querySelector('.cart-container').innerHTML = `
                                <div class="empty-cart" style="display: flex; flex-direction: column; align-items: center;">
                                    <img src="https://cdn-icons-png.flaticon.com/128/13637/13637462.png" alt="Giỏ hàng trống">
                                    <h2>Giỏ hàng của bạn hiện đang trống!</h2>
                                    <p>Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm.</p>
                                    <button onclick="window.location.href='@Url.Action("SanPham", "Product2")'">Quay lại mua sắm</button>
                                </div>`;
                            document.querySelector('.cart-container').style.textAlign = 'center'; // Căn giữa nội dung
                        } else {
                            toastr.error('Có lỗi xảy ra khi xóa giỏ hàng. Vui lòng thử lại!');
                        }
                    })
                    .catch(error => console.error('Error:', error));
                }
            });
        });
    </script>





</body>
</html>
