@model Tuple<IEnumerable<_6TL.Models.Product>, IEnumerable<_6TL.Models.Review>>

<link href="~/css/admin/quanlydanhgia.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<section class="review-management">
    <!-- Product List with Filter -->
    <div class="product-list">
        <h2>Sản phẩm</h2>
        <div class="sort-filter">
            <button class="filter-btn" onclick="sortProducts('desc')">
                <i class="fas fa-arrow-up"></i> Cao nhất
            </button>
            <button class="filter-btn" onclick="sortProducts('asc')">
                <i class="fas fa-arrow-down"></i> Thấp nhất
            </button>
        </div>

        <ul id="productList">
            @foreach (var product in Model.Item1)
            {
                <li>
                    <div class="product-item">
                        <img src="~/img/@product.Image" alt="@product.ProductName" />
                        <div>
                            <h3>@product.ProductName</h3>
                            <p>@(product.Price.HasValue ? product.Price.Value.ToString("C") : "Liên hệ")</p>
                            <div class="rating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa @((i <= product.Rating) ? "fa-star" : "fa-star-o")"></span>
                                }
                            </div>
                            <p>Đã bán: @product.Quantity</p>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>

    <!-- Review Section -->
    <div class="review-section">
        <h2>Đánh giá</h2>
        <div class="rating-filter">
            <button onclick="filterReviews(5)">5 Sao</button>
            <button onclick="filterReviews(4)">4 Sao</button>
            <button onclick="filterReviews(3)">3 Sao</button>
            <button onclick="filterReviews(2)">2 Sao</button>
            <button onclick="filterReviews(1)">1 Sao</button>
        </div>
        <div class="reviews" id="reviewList">
            @foreach (var review in Model.Item2)
            {
                <div class="review-item">
                    <div class="review-header">
                        <img src="https://via.placeholder.com/40" alt="User Avatar" />
                        <div>
                            <strong>@review.CustomerId</strong>
                            <p>@review.CreatedAt.ToString("yyyy-MM-dd")</p>
                            <span class="user-rating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa @((i <= review.Rating) ? "fa-star" : "fa-star-o")"></span>
                                }
                            </span>
                        </div>
                    </div>
                    <p>@review.ReviewText</p>
                    <div class="reply">
                        <a href="#">Phản hồi</a>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<div class="chart-section">
    <canvas id="ratingChart"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Hàm lọc sản phẩm
    function sortProducts(order) {
        const productList = document.getElementById("productList");
        const items = Array.from(productList.children);

        items.sort((a, b) => {
            const priceA = parseInt(a.querySelector('p').textContent.replace(/[^0-9]/g, '') || "0");
            const priceB = parseInt(b.querySelector('p').textContent.replace(/[^0-9]/g, '') || "0");
            return order === 'asc' ? priceA - priceB : priceB - priceA;
        });

        productList.innerHTML = '';
        items.forEach(item => productList.appendChild(item));
    }

    // Hàm lọc đánh giá
    // Hàm lọc sản phẩm theo đánh giá
    function sortProducts(order) {
        fetch(`/Admin/Review/SortProducts?order=${order}`, {
            method: 'GET'
        })
            .then(response => response.text())
            .then(data => {
                document.getElementById('productList').innerHTML = data;
            });
    }

    // Tạo biểu đồ
    async function drawChart() {
        const response = await fetch('/Admin/Review/GetChartData');
        const chartData = await response.json();

        const ctx = document.getElementById('ratingChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['1 Sao', '2 Sao', '3 Sao', '4 Sao', '5 Sao'],
                datasets: [{
                    label: 'Số lượng đánh giá',
                    data: chartData,
                    backgroundColor: ['#f44336', '#ff9800', '#ffc107', '#8bc34a', '#4caf50'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: { title: { display: true, text: 'Mức đánh giá' } },
                    y: { beginAtZero: true, title: { display: true, text: 'Số lượng' } }
                }
            }
        });
    }

    // Khởi tạo biểu đồ khi load trang
    drawChart();
</script>